# e2e-actions
#
# When adding new e2e apps that require compilation (such as a new Rust test app) you have to add
# the building step here.
#
# For Rust apps, we have a little script (see # Build Rust test apps) that loops through the
# existing directories doing a `cargo build`.
#
# Be very careful when adding new build steps, as they have an impact on every other PR in 
# the `mirrord` repo.
#
# If you add a new build step, say to compile a Go program, but the code for this program is only
# in your PR, then all other PRs will start failing, as they lack yours.
#
# The best way to add new build steps here is to either do something similar to what's being done
# for Rust, or to do it as a conditional build, first checking if the directory/code exists before
# calling a compiler.
name: 'Changelog Cleaning'
description: 'Prints yayayay and checks out a destination repo'
inputs:
  local_file_path:
    description: 'Path to the local file to read'
    required: true
  destination_repo:
    description: 'Destination repository in owner/repo format'
    required: true
  destination_file_path:
    description: 'Path to the destination file within the repo'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout destination repository
      uses: actions/checkout@v4
      with:
        repository: ${{ inputs.destination_repo }}
        path: destination_repo
        token: ${{ github.token }}
    - name: Set up Rust toolchain
      uses: metalbear-co/setup-rust-toolchain@009cda47e1b529982a00627a40eda87b4215035a
    - name: Install rust-script
      run: cargo install rust-script --locked
      shell: bash
    - name: Run main.rs with rust-script
      run: |
        INPUT_LOCAL_FILE_PATH="${{ inputs.local_file_path }}" \
        INPUT_DESTINATION_REPO="${{ inputs.destination_repo }}" \
        INPUT_DESTINATION_FILE_PATH="${{ inputs.destination_file_path }}" \
        rust-script "${{ github.action_path }}/src/main.rs"
      shell: bash
branding:
  icon: 'terminal'
  color: 'purple'
